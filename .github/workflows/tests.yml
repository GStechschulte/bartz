# bartz/workflows/tests.yml
#
# Copyright (c) 2024-2025, Giacomo Petrillo
#
# This file is part of bartz.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: tests-docs

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

jobs:

  tests:

    if: github.repository == 'Gattocrucco/bartz'
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental != '' }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target-suffix: ""
          - os: ubuntu-22.04
            target-suffix: "-old"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.3"
          enable-cache: false

      - name: Install micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          micromamba-version: "2.1.1-0"

      - name: Create venv and install package
        run: make setup-ci${{ matrix.target-suffix }}

      - name: Run unit tests
        run: |
          make COVERAGE_SUFFIX=-${{ matrix.os }}${{ matrix.target-suffix }} tests

      - name: Save coverage information
        uses: actions/upload-artifact@v4
        with:
          name: coverage.tests-${{ matrix.os }}${{ matrix.target-suffix }}
          path: .coverage.tests-${{ matrix.os }}${{ matrix.target-suffix }}
          include-hidden-files: true
          if-no-files-found: error

  docs:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0  # this fetches the full history

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.3"
          enable-cache: false

      - name: Install micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          micromamba-version: "2.1.1-0"

      - name: Create venv and install package
        run: |
          make setup-ci

      - name: Generate benchmarks visualization
        run: |
          make benchmark-site

      - name: Generate documentation
        run: |
          make docs-all

      - name: Save documentation
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            _site/docs
            _site/docs-dev
            _site/benchmarks
          if-no-files-found: error

  covreport:

    runs-on: ubuntu-latest
    needs: [tests] # add docs if I run examples and tutorials

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.3"
          enable-cache: false

      - name: Install micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          micromamba-version: "2.1.1-0"

      - name: Create venv and install package
        run: |
          make setup-ci

      - name: Get coverage files
        uses: actions/download-artifact@v4
        with:
          pattern: coverage.*
          merge-multiple: true

      - name: List files
        run: |
          pwd
          ls -a
          ls src/bartz

      - name: Print coverage debug
        run: |
          uv run coverage debug config
          uv run coverage debug sys
          uv run coverage debug data

      - name: Generate coverage report
        run: make covreport

      - name: Save coverage report
        uses: actions/upload-artifact@v4
        with:
          name: covreport
          path: _site/coverage
          if-no-files-found: error

  deploy:

    runs-on: ubuntu-latest
    needs: [docs, covreport]

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Get documentation and benchmarks
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: _site

      - name: Get coverage report
        uses: actions/download-artifact@v4
        with:
          name: covreport
          path: _site/coverage

      - name: List files
        run: |
          pwd
          ls -a
          ls -a _site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
